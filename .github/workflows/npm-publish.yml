# This workflow will run tests using node and then publish a package to GitHub Packages when a release is created
# For more information see: https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages
# npm ci === npm install

name: http-typedi
 
on: 
  pull_request: 
    branches: 
    - main 
  push: 
    branches: 
    - main 
env:
  NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
  REGISTRY_URL: https://registry.npmjs.org/
  PACKAGE_VERSION: $(node -p "require('./package.json').version")
jobs: 
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3 
      - name: Setup Node.js
        uses: actions/setup-node@v3 
        with:
          node-version: 16

      - name: Install Dependencies
        run: npm install

      - name: Run Tests
        run: npm run test

      - name: Build Package
        run: npm run build

  publish-npm: 
    needs: build-and-test
    runs-on: ubuntu-latest 
    steps: 
      # From https://github.com/http-typedi Extract code from
      - uses: actions/checkout@v3 

      - name: Setup Node.js
        uses: actions/setup-node@v3 
        with: 
          node-version: 16 
          registry-url: ${{ env.REGISTRY_URL }}

      # 检查新的软件包版本是否存在于NPM存储库中，如果不存在，则构建并发布新的软件包版
      - name: Check for Existing Package and Publish New Version
        run: |
          # Check if the newly built package version already exists in the NPM repository
          NEW_VERSION=$(npm show http-typedi version) 

          # If the new package version does not exist, then publish new package version
          if [ "${{ env.PACKAGE_VERSION }}" != "$NEW_VERSION" ]; then 
            npm install
            npm publish 
            echo "Published new version $PACKAGE_VERSION"

          # 如果新的软件包版本已存在，则不执行任何操作
          else 
            echo "Nothing to do. Package version $PACKAGE_VERSION already exists."
            exit 0
          fi 
